{
   "constantName": "goblob",
   "developerSecurity": [],
   "extendsPage": null,
   "fileTimestamp": "2019-12-13T19:27:31Z",
   "modelView": {
      "components": [
         {
            "submitLabel": "",
            "components": [
               {
                  "name": "fileUploadLiteral",
                  "type": "literal",
                  "value": "<div>   <label for=\"input-file\">Choose File  to Upload from your computer:</label><br>   <input type=\"file\" id=\"input-file\"></div>"
               },
               {
                  "onClick": "$gorblobResource.$post(\n   {//params\n     file: $(\"#pbid-gorblobTextArea\").val(),\n    crn: $szpfgdpCrnList,\nterm: $TERM\n\n   },\n   null,\n   function(response) {\n      //success\n  \n      alert('Grades Updated.');\n$szpfgdpCrnGr.$load();\n },\n   function(response) {\n      //error\n\nalert('Grade file content does not match CRN selection',{type:\"fatal\"});\nvar errorMessage =response.data.errors? response.data.errors.errorMessage: null; if (errorMessage&&errorMessage.indexOf(\"ORA-20000\") > -1) {   alert(\"Select at least one course to teach\", {type:\"error\"}); if (errorMessage&&errorMessage.indexOf(\"ORA-20001\") > -1) {   alert(\"Course Grade:\", {type:\"error\"}); } }     else {   if (response.data.errors.errorMessage) {     alert(response.data.errors.errorMessage,{type:\"error\"});   }   else if (response.data.errors[0].errorMessage) {     alert(response.data.errors[0].errorMessage,{type:\"error\"});   } else {     alert(errorMessage?errorMessage:response.data, {type:\"error\"});   }}\n});",
                  "name": "submitButton",
                  "label": "Upload File",
                  "type": "button"
               },
               {
                  "onError": "var errorMessage =response.data.errors? response.data.errors.errorMessage: null; if (errorMessage&&errorMessage.indexOf(\"ORA-20000\") > -1) {   alert(\"Select at least one course to teach\", {type:\"error\"}); if (errorMessage&&errorMessage.indexOf(\"ORA-20001\") > -1) {   alert(\"Course Grade:\", {type:\"error\"}); } }     else {   if (response.data.errors.errorMessage) {     alert(response.data.errors.errorMessage,{type:\"error\"});   }   else if (response.data.errors[0].errorMessage) {     alert(response.data.errors[0].errorMessage,{type:\"error\"});   } else {     alert(errorMessage?errorMessage:response.data, {type:\"error\"});   }}",
                  "readonly": false,
                  "name": "gorblobTextArea",
                  "onLoad": "$file==\"\";",
                  "model": "file",
                  "loadInitially": false,
                  "type": "textArea",
                  "onUpdate": "",
                  "parameters": {},
                  "value": "",
                  "required": false,
                  "validation": {}
               },
               {
                  "name": "jsLiteral",
                  "type": "literal",
                  "value": "<script>\ndocument.getElementById('input-file')\n  .addEventListener('change', getFile)\n\nfunction getFile(event) {\n\tconst input = event.target\n  if ('files' in input && input.files.length > 0) {\n\t  placeFileContent(\n      document.getElementById('pbid-gorblobTextArea'),\n      input.files[0])\n  }\n}\n\nfunction placeFileContent(target, file) {\n\treadFileContent(file).then(content => {\n  \ttarget.value = btoa(content)\n  }).catch(error => console.log(error))\n}\n\nfunction readFileContent(file) {\n\tconst reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onload = event => resolve(event.target.result)\n    reader.onerror = error => reject(error)\n    reader.readAsBinaryString(file)\n  })\n}\n</script>"
               },
               {
                  "name": "cssLiteral",
                  "type": "literal",
                  "value": "<style>\n#pbid-gorblobTextArea {\n   display:none;\n}\n</style>"
               },
               {
                  "name": "CRN",
                  "label": "CRN you are uploading",
                  "type": "literal",
                  "value": "$szpfgdpCrnList"
               },
               {
                  "name": "TERM",
                  "label": "Term this CRN belongs",
                  "type": "literal",
                  "value": "$szpfgdpSelTerm"
               }
            ],
            "submit": "",
            "nextButtonLabel": "Next",
            "name": "gorblobForm",
            "showInitially": false,
            "style": "center",
            "type": "form"
         }
      ],
      "name": "gorblob",
      "type": "page"
   },
   "owner": null,
   "pageRoles": []
}